{"version":3,"sources":["constants/action.types.ts","components/loader/Loader.tsx","components/select/Select.tsx","components/photoCard/PhotoCard.tsx","components/photoCollection/PhotoCollection.tsx","containers/PhotoCollection.tsx","actions/photos/photos.action.ts","components/pageHeading/PageHeading.tsx","App.tsx","reducers/photos/photos.reducer.ts","reducers/index.ts","constants/endpoint.ts","sagas/photos.sagas.ts","sagas/index.ts","store/index.ts","index.tsx"],"names":["actions","GET","SUCCESS","FAILURE","Loader","className","Spinner","animation","variant","Select","allOptions","label","map","tag","index","key","value","PhotoCard","title","ownername","description","url_q","owner","tags","id","alltags","split","src","alt","href","rel","target","dangerouslySetInnerHTML","__html","_content","length","PhotoCollectionComponent","photos","status","getPhotos","useEffect","item","PhotoCollectionContainer","connect","state","photoCollection","dispatch","type","PageHeading","App","initialState","rootReducers","combineReducers","action","payload","error","API_ROOT","params","format","nojsoncallback","text","safe_search","extras","page","per_page","getPhotosSaga","photosSagas","getData","axios","get","call","response","put","data","photo","takeEvery","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.623bec04.chunk.js","sourcesContent":["export const actions = {\n    PHOTOS: {\n        GET: 'PHOTOS_GET',\n        SUCCESS: 'PHOTOS_SUCCESS',\n        FAILURE: 'PHOTOS_FAILURE'\n    }\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './Loader.scss';\n\nconst Loader: React.FC<{}> = () => (\n    <div className=\"loader\">\n        <Spinner animation=\"border\" variant=\"warning\" />\n    </div>\n);\n\nexport default Loader;\n","import React from 'react';\nexport interface SelectProps {\n    allOptions: string[];\n    label: string;\n}\n\nconst Select: React.SFC<SelectProps> = ({ allOptions, label }) => {\n    return (\n        <div className=\"input-group input-group-sm mt-3\">\n            <div className=\"input-group-prepend\">\n                <label className=\"input-group-text\">{label}</label>\n            </div>\n            <select className=\"custom-select\">\n                {allOptions.map((tag, index) => (\n                    <option key={index} value={tag}>\n                        {tag}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default Select;\n","import React from 'react';\nimport { Photo } from '../../types/Photo';\nimport './PhotoCard.scss';\nimport Select from '../select/Select';\n\nconst PhotoCard: React.FC<Photo> = ({ title, ownername, description, url_q, owner, tags, id }) => {\n    const alltags = tags ? tags.split(' ') : [];\n\n    return (\n        <div className=\"card shadow-lg\">\n            <img className=\"card-img-top\" src={url_q} alt={title} />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                    <a\n                        href={`https://www.flickr.com/photos/${owner}/${id}`}\n                        rel=\"noopener noreferrer\"\n                        title={title}\n                        target=\"_blank\"\n                    >\n                        {title}\n                    </a>{' '}\n                    by{' '}\n                    <a\n                        href={`https://www.flickr.com/photos/${owner}`}\n                        rel=\"noopener noreferrer\"\n                        title={ownername}\n                        target=\"_blank\"\n                    >\n                        {ownername}\n                    </a>\n                </h5>\n                {description && (\n                    <div\n                        className=\"block-with-text\"\n                        dangerouslySetInnerHTML={{\n                            __html: description._content\n                        }}\n                    />\n                )}\n                {alltags.length > 1 && <Select allOptions={alltags} label=\"Tags\" />}\n            </div>\n        </div>\n    );\n};\n\nexport default PhotoCard;\n","import React, { useEffect } from 'react';\nimport Loader from '../loader/Loader';\nimport PhotoCard from '../photoCard/PhotoCard';\nimport './PhotoCollection.scss';\nimport { Photo } from '../../types/Photo';\n\ninterface Props {\n    status: string;\n    photos?: Array<Photo>;\n    getPhotos: any;\n}\n\nconst PhotoCollectionComponent: React.FC<Props> = ({ photos = [], status, getPhotos }) => {\n    useEffect(() => {\n        getPhotos();\n    }, [getPhotos]);\n\n    return (\n        <div className=\"container pt-5\">\n            {status === 'loading' ? (\n                <div className=\"loader-container\">\n                    <Loader />\n                </div>\n            ) : (\n                status === 'loaded' && (\n                    <div className=\"d-flex flex-wrap\">\n                        {photos.map((item, index) => (\n                            <PhotoCard key={index} {...item} />\n                        ))}\n                    </div>\n                )\n            )}\n            {status === 'error' && <div className=\"error-content\">Oops there is an error! Try Again later</div>}\n        </div>\n    );\n};\n\nexport default PhotoCollectionComponent;\n","import { connect } from 'react-redux';\nimport { State } from '../reducers';\nimport { getPhotos } from '../actions/photos/photos.action';\nimport PhotoCollectionComponent from '../components/photoCollection/PhotoCollection';\n\nconst mapStateToProps = (state: State) => ({ ...state.photoCollection });\n\nconst mapDispatchToProps = (dispatch: any) => ({ getPhotos: () => dispatch(getPhotos()) });\n\nexport const PhotoCollectionContainer = connect(mapStateToProps, mapDispatchToProps)(PhotoCollectionComponent);\n","import { actions } from '../../constants/action.types';\nimport { BaseAction, Photo } from '../../types/Photo';\n\nexport const getPhotos = (): BaseAction => ({\n    type: actions.PHOTOS.GET\n});\n\nexport const getPhotosSuccess = (photos: Array<Photo>): BaseAction => ({\n    type: actions.PHOTOS.SUCCESS,\n    payload: photos\n});\n\nexport const getPhotosFailure = (error: object): BaseAction => ({\n    type: actions.PHOTOS.FAILURE,\n    payload: error\n});\n","import React from 'react';\n\ninterface Props {\n    title: string;\n}\n\nconst PageHeading: React.FC<Props> = ({ title }) => {\n    return <h1 className=\"pt-4 text-center text-uppercase\">{title}</h1>;\n};\nexport default PageHeading;\n","import React, { Fragment } from 'react';\nimport './_shared/styles/main.scss';\nimport { PhotoCollectionContainer } from './containers/PhotoCollection';\nimport PageHeading from './components/pageHeading/PageHeading';\n\nconst App: React.FC = () => {\n    return (\n        <Fragment>\n            <PageHeading title=\"Rendered Markup from Flickr API\" />\n            <PhotoCollectionContainer />\n        </Fragment>\n    );\n};\n\nexport default App;\n","import { actions } from '../../constants/action.types';\nimport { PhotoCollection, Photo, BaseAction } from '../../types/Photo';\n\nexport const initialState = {\n    status: 'init'\n};\nexport const photoCollectionReducer = (state: PhotoCollection<Photo> = initialState, action: BaseAction) => {\n    switch (action.type) {\n        case actions.PHOTOS.GET:\n            return { ...state, status: 'loading' };\n        case actions.PHOTOS.SUCCESS:\n            return {\n                ...state,\n                photos: action.payload,\n                status: 'loaded'\n            };\n        case actions.PHOTOS.FAILURE:\n            return { ...state, error: action.payload, status: 'error' };\n    }\n    return state;\n};\n","import { combineReducers } from 'redux';\nimport { PhotoCollection, Photo } from '../types/Photo';\nimport { photoCollectionReducer } from './photos/photos.reducer';\n\nexport interface State {\n    photoCollection: PhotoCollection<Photo>;\n}\n\nexport const rootReducers = combineReducers<State>({\n    photoCollection: photoCollectionReducer\n});\n","const API_KEY = 'f81ff335df25efa4e0ba5fe3f2f415a3';\n\nexport const API_ROOT = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${API_KEY}`;\n\nexport const params = {\n    format: 'json',\n    nojsoncallback: 1,\n    text: 'cartoons',\n    safe_search: 1,\n    extras: 'description, owner_name, tags, url_q',\n    page: 1,\n    per_page: 40\n};\n","import axios from 'axios';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { getPhotosSuccess, getPhotosFailure } from '../actions/photos/photos.action';\nimport { API_ROOT, params } from '../constants/endpoint';\nimport { actions } from '../constants/action.types';\n\nfunction getData() {\n    return axios.get(API_ROOT, { params });\n}\n\nfunction* getPhotosSaga() {\n    try {\n        const response = yield call(getData);\n        yield put(getPhotosSuccess(response.data.photos.photo));\n    } catch (error) {\n        yield put(getPhotosFailure(error));\n    }\n}\n\nexport default function* photosSagas() {\n    yield takeEvery(actions.PHOTOS.GET, getPhotosSaga);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport photosSagas from './photos.sagas';\n\nexport const rootSaga = function* root() {\n    yield all([fork(photosSagas)]);\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducers } from '../reducers';\nimport { rootSaga } from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducers, {}, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}